name: Build OpenClash for OpenWrt 23.05.5 on arm64 v8

on:
  # 可以手动触发工作流
  workflow_dispatch:
  # 也可以在push到main分支时自动触发
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04
    container:
      image: openwrtorg/sdk:23.05.5-arm64_cortex-a53
      options: --privileged
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Update package lists
        run: |
          apt-get update
          apt-get install -y git make gcc g++ libncurses-dev flex bison libssl-dev \
          libxml-parser-perl python3 python3-pip python3-setuptools python3-cffi \
          libpython3-dev libffi-dev automake autoconf libtool autopoint gawk \
          gettext-base bc rsync file unzip

      - name: Clone OpenWrt source
        run: |
          git clone https://github.com/openwrt/openwrt.git -b openwrt-23.05.5 openwrt-source
          cd openwrt-source
          git submodule update --init --recursive
      
      - name: Configure OpenWrt for arm64 v8
        run: |
          cd openwrt-source
          # 选择arm64 v8架构的默认配置
          make defconfig ARCH=arm64 SUBARCH=arm64
          # 或者使用更具体的目标配置（根据实际硬件调整）
          # make ath79-generic_defconfig ARCH=arm64 SUBARCH=arm64
          
          # 添加openclash和相关kmods的配置
          make menuconfig -o .config << 'EOF'
          CONFIG_PACKAGE_openclash=y
          CONFIG_PACKAGE_kmod-tun=y
          CONFIG_PACKAGE_kmod-inet-diag=y
          CONFIG_PACKAGE_kmod-nf-conntrack=y
          CONFIG_PACKAGE_kmod-nf-conntrack6=y
          CONFIG_PACKAGE_kmod-nf-flow=y
          CONFIG_PACKAGE_kmod-nf-ipt=y
          CONFIG_PACKAGE_kmod-nf-ipt6=y
          CONFIG_PACKAGE_kmod-nf-reject=y
          CONFIG_PACKAGE_kmod-nf-reject6=y
          CONFIG_PACKAGE_kmod-ipt-mod-tproxy=y
          CONFIG_PACKAGE_kmod-ip6tables-mod-tproxy=y
          EOF
      
      - name: Add openclash package source
        run: |
          cd openwrt-source
          # 添加openclash的package源
          mkdir -p feeds/packages/net
          git clone https://github.com/vernesong/OpenClash.git feeds/packages/net/openclash
          # 或者使用本地克隆（如果已存在）
          # cp -rf ../OpenClash feeds/packages/net/openclash
          
          # 更新 feeds
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      
      - name: Compile OpenWrt with openclash
        run: |
          cd openwrt-source
          # 开始编译，-j$(nproc) 使用所有可用核心
          make -j$(nproc) V=s
      
      - name: Collect build artifacts
        run: |
          cd openwrt-source
          mkdir -p $GITHUB_WORKSPACE/artifacts
          # 复制openclash.ipk
          cp bin/arm64/packages/net/openclash_*.ipk $GITHUB_WORKSPACE/artifacts/
          # 复制相关kmods
          cp bin/arm64/packages/kmods/kmod-tun_*.ipk $GITHUB_WORKSPACE/artifacts/
          cp bin/arm64/packages/kmods/kmod-inet-diag_*.ipk $GITHUB_WORKSPACE/artifacts/
          cp bin/arm64/packages/kmods/kmod-nf-conntrack_*.ipk $GITHUB_WORKSPACE/artifacts/
          cp bin/arm64/packages/kmods/kmod-nf-conntrack6_*.ipk $GITHUB_WORKSPACE/artifacts/
          cp bin/arm64/packages/kmods/kmod-nf-flow_*.ipk $GITHUB_WORKSPACE/artifacts/
          cp bin/arm64/packages/kmods/kmod-nf-ipt_*.ipk $GITHUB_WORKSPACE/artifacts/
          cp bin/arm64/packages/kmods/kmod-nf-ipt6_*.ipk $GITHUB_WORKSPACE/artifacts/
          cp bin/arm64/packages/kmods/kmod-nf-reject_*.ipk $GITHUB_WORKSPACE/artifacts/
          cp bin/arm64/packages/kmods/kmod-nf-reject6_*.ipk $GITHUB_WORKSPACE/artifacts/
          cp bin/arm64/packages/kmods/kmod-ipt-mod-tproxy_*.ipk $GITHUB_WORKSPACE/artifacts/
          cp bin/arm64/packages/kmods/kmod-ip6tables-mod-tproxy_*.ipk $GITHUB_WORKSPACE/artifacts/
          # 复制OpenWrt固件（可选）
          cp bin/arm64/images/*-squashfs-sysupgrade.bin $GITHUB_WORKSPACE/artifacts/ 2>/dev/null
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: openclash-arm64-v8-packages
          path: $GITHUB_WORKSPACE/artifacts/
          retention-days: 7
